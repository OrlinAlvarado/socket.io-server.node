{"version":3,"sources":["SocketApp.js","index.js"],"names":["SocketApp","useState","bands","setBands","chartData","setChartData","socket","useRef","socketIOClient","process","useEffect","current","on","data","_chartData","map","band","console","log","randomColor","replace","Math","random","toString","insert","title","name","value","votes","color","push","disconnect","className","label","props","dataEntry","style","height","scope","key","id","type","onClick","emit","ReactDOM","render","document","getElementById"],"mappings":"qQAOaA,EAAY,WAAO,IAAD,EACDC,mBAAS,IADR,mBACpBC,EADoB,KACbC,EADa,OAEOF,mBAAS,IAFhB,mBAEpBG,EAFoB,KAETC,EAFS,KAIrBC,EAASC,iBAAOC,IAPTC,oDASbC,qBAAU,WAwBN,OAvBAJ,EAAOK,QAAQC,GAAG,gBAAgB,SAAAC,GAC9BV,EAASU,GAET,IAAIC,EAAa,GACjBD,EAAKE,KAAK,SAACC,GACPC,QAAQC,IAAIF,GACZ,IAAIG,EAAc,UAAUC,QAAQ,MAAM,WACtC,UAA2B,GAAhBC,KAAKC,WAAgBC,SAAS,OAGzCC,EAAS,CACTC,MAAOT,EAAKU,KACZC,MAAOX,EAAKY,MACZC,MAAOV,GAIX,OADAL,EAAWgB,KAAKN,GACT,QAGXnB,EAAcS,MAGX,kBAAMR,EAAOyB,gBACnB,CAACzB,IAQN,OACI,6BAEI,wBAAI0B,UAAU,QAAd,UACA,6BAEA,yBAAKA,UAAU,YACX,yBAAKA,UAAU,eAAf,cAGA,yBAAKA,UAAU,aACf,kBAAC,WAAD,CACKC,MAAO,SAACC,GAAY,OAAOA,EAAMC,UAAUR,OAC5CS,MAAO,CAAEC,OAAQ,KACjBxB,KAAOT,MAKf,yBAAK4B,UAAU,YACX,yBAAKA,UAAU,eAAf,SAGA,yBAAKA,UAAU,aAInB,2BAAOA,UAAU,oBACjB,+BACI,4BACA,wBAAIM,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,WAGJ,+BAEQpC,EAAMa,KAAK,SAAAC,GAAI,OACX,wBAAIuB,IAAMvB,EAAKwB,IACX,4BAAMxB,EAAKU,MACX,4BAAMV,EAAKY,OACX,4BAAI,4BAAQa,KAAK,SAAST,UAAU,0BAA0BU,QAAU,kBA/CzEF,EA+C2FxB,EAAKwB,QA9CjHlC,EAAOK,QAAQgC,KAAK,YAAY,CAC5BH,OAFW,IAAEA,IA+CK,oBCnFhCI,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.60e7eed1.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\nconst ENDPOINT = process.env.REACT_APP_SERVER;\r\n\r\n\r\nexport const SocketApp = () => {\r\n    const [bands, setBands] = useState([]);\r\n    const [chartData, setChartData] = useState([]);\r\n    \r\n    const socket = useRef(socketIOClient(ENDPOINT));\r\n    \r\n    useEffect(() => {\r\n        socket.current.on(\"active-bands\", data => {\r\n            setBands(data);\r\n            \r\n            let _chartData = [];\r\n            data.map( (band) => {\r\n                console.log(band);\r\n                var randomColor = \"#000000\".replace(/0/g, function () {\r\n                    return (~~(Math.random() * 16)).toString(16);\r\n                  });\r\n                  \r\n                let insert = {\r\n                    title: band.name,\r\n                    value: band.votes,\r\n                    color: randomColor\r\n                };\r\n                \r\n                _chartData.push(insert);\r\n                return null;\r\n            });\r\n            \r\n            setChartData( _chartData);\r\n        });\r\n        \r\n        return () => socket.disconnect();\r\n      }, [socket]);\r\n      \r\n      const handleVote = ( id ) => {\r\n          socket.current.emit('vote-band',{\r\n              id\r\n          });\r\n      }\r\n    \r\n    return (\r\n        <div>\r\n            \r\n            <h5 className='mt-2'>Bandas</h5>\r\n            <hr />\r\n            \r\n            <div className=\"card m-5\">\r\n                <div className=\"card-header\">\r\n                    Resultados\r\n                </div>\r\n                <div className=\"card-body\">\r\n                <PieChart\r\n                     label={(props) => { return props.dataEntry.value;}}\r\n                    style={{ height: 200}}\r\n                    data={ chartData }\r\n                />\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"card m-5\">\r\n                <div className=\"card-header\">\r\n                    Votar\r\n                </div>\r\n                <div className=\"card-body\">\r\n                \r\n            \r\n            \r\n            <table className=\"table table-dark\">\r\n            <thead>\r\n                <tr>\r\n                <th scope=\"col\">Banda</th>\r\n                <th scope=\"col\">Votos</th>\r\n                <th scope=\"col\">Votar</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    bands.map( band => (\r\n                        <tr key={ band.id }>\r\n                            <td>{ band.name }</td>            \r\n                            <td>{ band.votes }</td>\r\n                            <td><button type=\"button\" className=\"btn btn-outline-primary\" onClick={ () => handleVote( band.id ) }>Votar</button></td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n            </table>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { SocketApp } from './SocketApp';\n\nReactDOM.render(\n    <SocketApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}